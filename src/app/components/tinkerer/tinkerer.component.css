.tinkerer-main {
    display: grid;
    height: 100%;
    width: 100%;

    min-height: 100%;
    min-width: 100%;

    gap: 10px;       /* This is the current implementation of gutters for CSS Grid - ONLY AFFECTS SPACE BETWEEN */
    padding: 5px 5px 0px 5px;       /*This is to match the "gap" size above*/
    
    grid-template-columns: repeat(4, [col] 1fr);
    grid-template-rows: repeat(8, [row] 1fr);

    background-color: #888888;

    transform: translateX(100%); /*To animate the tinkerer out of the way*/
}

/*The Sub-area for the controls grid layout*/
.tinkerer-controls {
    grid-column: col 1 / span 4;
    grid-row: row 1 / span 3;
    background-color: #777777;
    display: block;
    padding: 10px;
}

/*Actual sub-grid for the buttons*/
.controls-grid {
    display: grid;
    height: 100%;
    width: 100%;

    gap: 10px;       /* This is the current implementation of gutters for CSS Grid - ONLY AFFECTS SPACE BETWEEN */
    padding: 10px 10px 10px 10px;       /*This is to match the "gap" size above*/
    
    grid-template-columns: repeat(4, [col] 1fr);
    grid-template-rows: repeat(4, [row] 1fr);

    background-color: #999999;
}

/*For Controls Button positioning*/
.slot1 {
    grid-column: col 1 / span 2;
    grid-row: row 1 / span 1;
}
.slot2 {
    grid-column: col 3 / span 2;
    grid-row: row 1 / span 1;
}
.slot3 {
    grid-column: col 1 / span 2;
    grid-row: row 2 / span 1;
}
.slot4 {
    grid-column: col 3 / span 2;
    grid-row: row 2 / span 1;
}

/*For the control buttons Text labels*/
.button-label {
    font-size: 2.5rem; /*This is where you change the LABEL TEXT SIZE*/
    line-height: 1;
    text-align: left;
    float: left; /*this float is required for the float right on the chevron to work*/
    padding: 5px 2px 2px 2px;
    width: 60%;
}

/*Area for the "Body Cards" that hold the prompt tokens.*/
.tinkerer-body {
    grid-column: col 1 / span 4;
    grid-row: row 4 / span 5;
    background-color: #777777;
    display: block;
    padding: 10px;
}

/*Layout for the cards - with Scrollbars hidden*/
.body-grid {
    display: grid;
    height: 100%;
    width: 100%;

    gap: 20px;       /* This is the current implementation of gutters for CSS Grid - ONLY AFFECTS SPACE BETWEEN */
    padding: 20px 20px 2px 20px;       /*This is to match the "gap" size above*/
    
    grid-template-columns: 1fr;
    grid-auto-rows: auto;

    background-color: #999999;

    /* hide scrollbar but allow scrolling */

    overflow-y: scroll; 
    -ms-overflow-style: none; /* for Internet Explorer, Edge */
    scrollbar-width: 0px; /* for Firefox */
}
.body-grid::-webkit-scrollbar {
    display: none; /* for Chrome, Safari, and Opera scrollbar obscure */
}


/*To create the show/hide "tab" on the Tinkerer menu with icon and hover*/
.showHideTabArea {
    grid-column: col 1 / span 1;
    grid-row: row 5 / span 1;

    /*for tab effect*/
    border-radius: 15px 0px 0px 15px;

    width: 30%;
    background-color: #999999;
    transform: translateX(-100%);

    /*To give the tab a drop shadow for differentiation*/
    box-shadow: #033a05 -3px 3px 8px;
}
.iconArea {
    background-image: url("../../../../src/assets/arrow-square-left-svgrepo_256x256.png");
    background-repeat: no-repeat;
    background-size: contain;
    background-position: right, center;
    
    margin-top: 0px; /*A way to slightly reduce the size of the icon given the auto sizing and CSS Grid parent container(s) constraints.*/
    width: 100%;
    height: 100%;
}
.showHideTabArea:hover {
    background-image: radial-gradient(100% 100% at 100% 0, #BBBBBB 0, #AAAAAA 100%);
}
/*===== ========= =====*/


/*The button to add the tokens to the prompt area*/
.addButtonArea {
    grid-column: col 4 / span 1;
    grid-row: row 8 / span 1;
    background-color: #777777;
    padding: 15px 20px 5px 20px; /*To constrain the button a bit while keeping it fully centered*/
    border-radius: 25px 0px 0px 0px;
}
/*===== ========= =====*/

/*===== Animation Stuff =====*/
.tinkerer-main.animateIn {
    transform: translateX(0);
    transition-delay: 0s;
    transition-property: transform;
    transition-timing-function: ease-in-out;
    transition-duration: .5s;
}

.close {
    grid-column: col 1 / span 10;
    grid-row: row 1 / span 8;
    background-color: #012431;
    opacity: 0.5;
    display: none;

    animation: fadeIn .3s cubic-bezier(0.165, 0.840, 0.440, 1.000);
}

@keyframes fadeIn {
    0% {
        background: rgba(0, 0, 0, .0);
    }

    100% {
        background: rgba(0, 38, 51, 0.7);
    }
}
/*===== ========== =====*/